name: Build Application

on:
  push:
    tags:
      - 'v*'  # 태그가 v로 시작할 때 실행 (예: v1.0.0)

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: batch_subs_gemini_linux
            asset_name: batch_subs_gemini_linux.zip
          - os: windows-latest
            artifact_name: batch_subs_gemini_windows
            asset_name: batch_subs_gemini_windows.zip
          - os: macos-latest
            artifact_name: batch_subs_gemini_macos
            asset_name: batch_subs_gemini_macos.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller pillow
          pip install -r requirements.txt

      - name: Build with PyInstaller (Linux & macOS)
        if: matrix.os != 'windows-latest'
        run: |
          python build.py

      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python build.py

      - name: Package Application (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          zip -r ../${{ matrix.artifact_name }}.zip batch_subs_gemini/

      - name: Package Application (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd dist
          powershell Compress-Archive -Path batch_subs_gemini -DestinationPath ../${{ matrix.artifact_name }}.zip

      - name: Package Application (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          zip -r ../${{ matrix.artifact_name }}.zip batch_subs_gemini.app/

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}.zip

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.artifact_name }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 